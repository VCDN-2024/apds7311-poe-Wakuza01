{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lab_services_student\\\\Documents\\\\APDS7311-POE\\\\payment_portal\\\\payment_portal\\\\src\\\\components\\\\TransactionManagement.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TransactionManagement() {\n  _s();\n  const [transactions, setTransactions] = useState([]);\n  const [message, setMessage] = useState('');\n  useEffect(() => {\n    // Fetch pending transactions\n    const fetchTransactions = async () => {\n      try {\n        const response = await axios.get('/api/transactions/pending');\n        setTransactions(response.data);\n      } catch (error) {\n        setMessage(\"Error fetching transactions.\");\n      }\n    };\n    fetchTransactions();\n  }, []);\n  const verifyTransaction = async transactionId => {\n    try {\n      await axios.post(`/api/transactions/${transactionId}/verify`);\n      setTransactions(transactions.map(t => t._id === transactionId ? {\n        ...t,\n        status: 'verified'\n      } : t));\n    } catch (error) {\n      setMessage(\"Error verifying transaction.\");\n    }\n  };\n  const forwardToSWIFT = async () => {\n    try {\n      await axios.post('/api/transactions/forward');\n      setMessage(\"Transactions forwarded to SWIFT.\");\n      setTransactions([]);\n    } catch (error) {\n      setMessage(\"Error forwarding transactions to SWIFT.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Pending Transactions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: transactions.map(transaction => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [transaction.customerId, \" - \", transaction.amount, \" \", transaction.currency, \" - \", transaction.swiftCode, transaction.status === 'pending' && /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => verifyTransaction(transaction._id),\n          children: \"Verify\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)]\n      }, transaction._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: forwardToSWIFT,\n      children: \"Submit to SWIFT\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(TransactionManagement, \"4h7H6T/KPilnzRqcXQK5tpBYGZ8=\");\n_c = TransactionManagement;\nexport default TransactionManagement;\nvar _c;\n$RefreshReg$(_c, \"TransactionManagement\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","TransactionManagement","_s","transactions","setTransactions","message","setMessage","fetchTransactions","response","get","data","error","verifyTransaction","transactionId","post","map","t","_id","status","forwardToSWIFT","children","fileName","_jsxFileName","lineNumber","columnNumber","transaction","customerId","amount","currency","swiftCode","onClick","_c","$RefreshReg$"],"sources":["C:/Users/lab_services_student/Documents/APDS7311-POE/payment_portal/payment_portal/src/components/TransactionManagement.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nfunction TransactionManagement() {\r\n  const [transactions, setTransactions] = useState([]);\r\n  const [message, setMessage] = useState('');\r\n\r\n  useEffect(() => {\r\n    // Fetch pending transactions\r\n    const fetchTransactions = async () => {\r\n      try {\r\n        const response = await axios.get('/api/transactions/pending');\r\n        setTransactions(response.data);\r\n      } catch (error) {\r\n        setMessage(\"Error fetching transactions.\");\r\n      }\r\n    };\r\n    fetchTransactions();\r\n  }, []);\r\n\r\n  const verifyTransaction = async (transactionId) => {\r\n    try {\r\n      await axios.post(`/api/transactions/${transactionId}/verify`);\r\n      setTransactions(transactions.map(t => \r\n        t._id === transactionId ? { ...t, status: 'verified' } : t\r\n      ));\r\n    } catch (error) {\r\n      setMessage(\"Error verifying transaction.\");\r\n    }\r\n  };\r\n\r\n  const forwardToSWIFT = async () => {\r\n    try {\r\n      await axios.post('/api/transactions/forward');\r\n      setMessage(\"Transactions forwarded to SWIFT.\");\r\n      setTransactions([]);\r\n    } catch (error) {\r\n      setMessage(\"Error forwarding transactions to SWIFT.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Pending Transactions</h2>\r\n      {message && <p>{message}</p>}\r\n      <ul>\r\n        {transactions.map(transaction => (\r\n          <li key={transaction._id}>\r\n            {transaction.customerId} - {transaction.amount} {transaction.currency} - {transaction.swiftCode}\r\n            {transaction.status === 'pending' && (\r\n              <button onClick={() => verifyTransaction(transaction._id)}>Verify</button>\r\n            )}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n      <button onClick={forwardToSWIFT}>Submit to SWIFT</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionManagement;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}